<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="com.reonsoft.example" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DB Connection 설정 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
<!-- 		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
<!-- 		<beans:property name="url" value="jdbc:oracle:thin:@211.53.209.121:1521:xe"/> -->
		<beans:property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<beans:property name="url" value="jdbc:log4jdbc:oracle:thin:@211.53.209.121:1521:xe"/>
		<beans:property name="username" value="mpois"/>
		<beans:property name="password" value="1212"/>
	</beans:bean>
	
	<!-- 트랜잭션 -->
	<beans:bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- DB - Mybatis 설정 -->
	<beans:bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:/config/mybatis-config.xml" />
		<beans:property name="mapperLocations" value="classpath:/sqlmap/**/*.xml" />
	</beans:bean>
	
	<!-- 데이터베이스와 연결을 맺고 작업이 완료된 후에 연결을 close하는 작업 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="com.reonsoft.example" />
	</beans:bean>
	
	<!-- 로그인 인터셉터 -->
	<beans:bean id="loginInterceptor" class="com.reonsoft.example.interceptor.LoginInterceptor">
	</beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/user/loginPost"/>
			<mapping path="/user/naverLogin"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- google Class Bean설정 추가 -->
	
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="549162863248-tbth6qged73f8r2h8mk9cdmoidcg24ou.apps.googleusercontent.com" />
		<beans:constructor-arg value="u5IUqSsd5hRJ08MM34VMXcuB" />
	</beans:bean>
	
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost/oauth2callback" />
	</beans:bean>
	
</beans:beans>